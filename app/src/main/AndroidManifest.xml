<?xml version="1.0" encoding="utf-8"?>

<!--

 Sunshine

 A simple weather app

 Copyright (C) 2016 Kairu Joshua Wambugu

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see http://www.gnu.org/licenses/.

-->

<!-- The manifest -->

<manifest

    xmlns:android="http://schemas.android.com/apk/res/android"

    package="com.jlt.sunshine"

    >

    <!-- Permissions -->

    <!-- Accounts -->

    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

    <!-- GCM -->

    <!-- to keep the device awake for GCM -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- to allow app to register to receive GCM messages -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <!-- self made permission to ensure only this app receives messages intended for it -->

    <!-- signature - A permission that the system is to grant only if
        the requesting application is signed with the same certificate
        as the application that declared the permission. -->
    <permission

        android:name="com.jlt.sunshine.permission.C2D_MESSAGE"

        android:protectionLevel="signature"

        />

    <uses-permission android:name="com.jlt.sunshine.permission.C2D_MESSAGE" />

    <!-- Internet -->

    <uses-permission android:name="android.permission.INTERNET"/>

    <!-- Network -->

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Sync -->

    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />

    <application

        android:allowBackup="true"

        android:icon="@mipmap/ic_launcher"

        android:label="@string/app_name"

        android:supportsRtl="true"

        android:theme="@style/AppTheme.Main"

        >

        <activity

            android:name=".MainActivity"

            android:label="@string/app_name"

            android:theme="@style/AppTheme"

            >

            <intent-filter>

                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>

            </intent-filter>

        </activity>

        <!-- Details Activity -->

        <!--

        When Up is pressed, go to the Main Activity
        for Android v4.1/API 16 and above the parentActivityName does this
        for lower versions the meta-data tag does this

        -->

        <activity

            android:name=".DetailActivity"

            android:label="@string/title_activity_detail"

            android:parentActivityName=".MainActivity"

            android:theme="@style/AppTheme.Detail"

            >

            <meta-data

                android:name="android.support.PARENT_ACTIVITY"

                android:value="com.jlt.sunshine.MainActivity"

                />

        </activity>

        <!-- Settings -->

        <activity

            android:name=".SettingsActivity"

            android:label="@string/title_activity_settings"

            android:theme="@style/SettingsTheme"

            android:parentActivityName=".MainActivity"

            >

            <meta-data

                android:name="android.support.PARENT_ACTIVITY"

                android:value="com.jlt.sunshine.MainActivity"

                />

        </activity>

        <!-- Providers -->

        <!-- the WeatherProvider should be syncable too. -->
        <provider

            android:authorities="@string/content_authority"

            android:name="com.jlt.sunshine.data.WeatherProvider"

            android:exported="false"

            android:enabled="true"

            android:syncable="true"
            
            />

        <!-- SunshineSyncAdapter's dummy authentication service. -->
        <service

            android:name=".sync.SunshineAuthenticatorService"

            >

            <!-- the SunshineAuthenticatorService service is triggered by
            the intent action AccountAuthenticator, sent by the system to run the Authenticator.
            when SunshineAuthenticatorService is triggered, it runs the onBind method,
            which in turn wraps the authenticator. -->
            <intent-filter>

                <action android:name="android.accounts.AccountAuthenticator" />

            </intent-filter>

            <!-- metadata for the authenticator -->

            <!-- name - links the metadata to the authentication framework -->
            <!-- resource - name of the authenticator metadata XML file -->
            <meta-data

                android:name="android.accounts.AccountAuthenticator"

                android:resource="@xml/sunshine_authenticator"

                />

        </service>

        <!-- The SunshineSyncAdapter service -->

        <!-- exported - whether or not other processes (not the app)
                including the system can run this service. -->

        <service

            android:name=".sync.SunshineSyncService"

            android:exported="true"

            >

            <!-- the SunshineSyncAdapter service intercepts
                    the SyncAdapter system intent action so as to start running.
                    when this action is intercepted,
                    SunshineSyncAdapter's onBind is called. -->
            <intent-filter>

                <action android:name="android.content.SyncAdapter" />

            </intent-filter>

            <!-- gives the name of the sync adapter metadata XML file. -->
            <!-- name - this metadata is for the sync adapter framework -->
            <!-- resource - the name of the sync adapter XML metadata file -->
            <meta-data

                android:name="android.content.SyncAdapter"

                android:resource="@xml/sunshine_sync_adapter"

                />

        </service>

        <!-- GCM receiver and services -->

        <!-- GCM receiver -->

        <!-- needs GCM SEND permission so that
        only individuals with this permission can send us messages -->
        <receiver

            android:name="com.google.android.gms.gcm.GcmReceiver"

            android:exported="true"

            android:permission="com.google.android.c2dm.permission.SEND"

            >

            <!-- register intents for receiving GCM messages for our app -->
            <intent-filter>

                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <!-- for pre-Kitkat devices, register an intent for also registering for GCM -->
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />

                <category android:name="com.jlt.sunshine" />

            </intent-filter>

        </receiver>

        <!-- GCM Listener Service -->

        <service android:name=".gcm.MyGcmListenerService"
            android:exported="false" >

            <!-- handles receiving GCM messages -->

            <intent-filter>

                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

            </intent-filter>

        </service>

        <!-- GCM Instance ID Listener Service -->

        <service android:name=".gcm.MyInstanceIDListenerService"
            android:exported="false" >

            <!-- handles creation, rotation, and updating of registration tokens,
            imho aka Instance IDs -->

            <intent-filter>

                <action android:name="com.google.android.gms.iid.InstanceID" />

            </intent-filter>

        </service>

        <!-- GCM Registration Intent Service -->

        <service android:name=".gcm.RegistrationIntentService"
            android:exported="false">
        </service>

    </application>

</manifest>